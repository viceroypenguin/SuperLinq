namespace SuperLinq;

public static partial class SuperEnumerable
{
	{{~ for t in types ~}}
	/// <summary>
	/// Creates a delimited string from a sequence of values and
	/// a given delimiter.
	/// </summary>
	/// <param name="source">The sequence of items to delimit. Each is converted to a string using the
	/// simple ToString() conversion.</param>
	/// <param name="delimiter">The delimiter to inject between elements.</param>
	/// <returns>
	/// A string that consists of the elements in <paramref name="source"/>
	/// delimited by <paramref name="delimiter"/>. If the source sequence
	/// is empty, the method returns an empty string.
	/// </returns>
	/// <exception cref="ArgumentNullException">
	/// <paramref name="source"/> or <paramref name="delimiter"/> is <see langword="null"/>.
	/// </exception>
	/// <remarks>
	/// This operator uses immediate execution and effectively buffers the sequence.
	/// </remarks>
	public static global::System.String ToDelimitedString(this IEnumerable<{{t}}> source, global::System.String delimiter)
	{
		Guard.IsNotNull(source);
		Guard.IsNotNull(delimiter);
		return ToDelimitedStringImpl(source, delimiter, Builder);

		static global::System.Text.StringBuilder Builder(global::System.Text.StringBuilder sb, {{t}} e) => sb.Append(e);
    }
	{{ end ~}}
}
